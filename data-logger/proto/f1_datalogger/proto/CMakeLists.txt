include(FindProtobuf)
find_package(Protobuf REQUIRED)
protobuf_generate_cpp(${PROJECT_NAME}_PROTO_SRC ${PROJECT_NAME}_PROTO_HEADER UDPData.proto CarUDPData.proto ImageLabel.proto TimestampedUDPData.proto LabeledImage.proto TimestampedImage.proto)
message(STATUS "Generated sources: ${${PROJECT_NAME}_PROTO_SRC}")
message(STATUS "Generated header: ${${PROJECT_NAME}_PROTO_HEADER}")
message(STATUS "Including protobuf library headers: ${Protobuf_INCLUDE_DIR}")
message(STATUS "Including autogenerated protobuf paths: ${ProtobufIncludePath}")
message(STATUS "Linking against protobuf libraries: ${Protobuf_LIBRARIES}")
set(ProtobufIncludePath ${CMAKE_CURRENT_BINARY_DIR}
    CACHE INTERNAL "Path to generated protobuf files.")
file(MAKE_DIRECTORY ${ProtobufIncludePath}/${PROJECT_NAME}/proto/)


add_library(${PROJECT_NAME}_proto ${${PROJECT_NAME}_PROTO_SRC})
target_include_directories(${PROJECT_NAME}_proto PRIVATE ${ProtobufIncludePath} ${Protobuf_INCLUDE_DIR})
target_link_libraries(${PROJECT_NAME}_proto ${Protobuf_LIBRARIES})




set(install_targets
#libraries
${PROJECT_NAME}_proto 
)
install(TARGETS ${install_targets}
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
)
unset(install_targets)


